version: "3.9"

services:
  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  db:
    image: postgres:latest
    container_name: POSTGRES_DB
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./data/db:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  chromadb:
    container_name: chromadb
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    environment:
      - ALLOW_RESET=true
    volumes:
      - chroma_data:/chroma/chroma

  chromadb_rag:  # second DB used by retriever
    container_name: chromadb_rag
    image: chromadb/chroma:latest
    ports:
      - "8003:8000"
    environment:
      - ALLOW_RESET=true
    volumes:
      - chroma_rag_data:/chroma/chroma

  backend:
    build: .
    container_name: backend
    command: bash -c "python manage.py generateschema && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./core:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db
      - chromadb
    environment:
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - CHROMA_RAG_HOST=chromadb_rag
      - CHROMA_RAG_PORT=8000

  worker_one:
    build: .
    command: celery -A Core worker --loglevel=info -Q queue_one
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend
    environment:
      - DJANGO_SETTINGS_MODULE=Core.settings.development
      - PYTHONPATH=/app

  worker_two:
    build: .
    command: celery -A Core worker --loglevel=info -Q queue_two
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend
    environment:
      - DJANGO_SETTINGS_MODULE=Core.settings.development
      - PYTHONPATH=/app

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - '5000:80'
      - '25:25'
      - '143:143'
    volumes:
      - smtp4dev-data:/smtp4dev
    environment:
      - ServerOptions__HostName=smtp4dev

  pgadmin:
    container_name: container-pgadmin
    image: dpage/pgadmin4
    depends_on:
      - db
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    restart: unless-stopped

  # ----------------------------------------
  # Fix: Indent the docs service under services
  # ----------------------------------------
  docs:
    build:
      context: .  # Build from root directory (where the Dockerfile is)
      dockerfile: Dockerfile  # Explicitly use the root Dockerfile
    volumes:
      - ./core/docs:/app/docs  # Mount only the docs directory
    environment:
      - DJANGO_SETTINGS_MODULE=Core.settings.development
    ports:
      - "8002:8000"  # Changed port to avoid conflict with chromadb
    command: sphinx-autobuild --host 0.0.0.0 --port 8000 /app/docs/source /app/docs/build
    depends_on:
      - backend  # Ensure backend starts first

volumes:
  smtp4dev-data:
  chroma_data:
  chroma_rag_data: